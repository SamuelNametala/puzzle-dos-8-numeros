package codigo;

import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/**
 *
 * @author Samuel Nametala
 */
public class Janela extends javax.swing.JFrame {

    /*Guarda os valores das posições das peças do tabuleiro desta Janela.*/
    private int[][] tabuleiro;
    private String[][] lista_imagem, lista_imagem_padrao;
    private javax.swing.JLabel[][] botao;
    private BuscaAEstrela busca_a_estrela;
    private ArrayList<No> lista_caminho;
    private int movimentar_no;
    private int id_heuristica;
    /*Guarda as informações para serem exibidas na janela.*/
    private String texto, texto_solucao;
    private String nos_explorados_H1, nos_explorados_H2;
    private String quantidade_movimentos_H1, quantidade_movimentos_H2;
    private String profundidade_H1, profundidade_H2;
    private String id_no_objetivo_H1, id_no_objetivo_H2;
    private String nos_gerados_H1, nos_gerados_H2;
    private String caminho_H1, caminho_H2;

    /**
     * Creates new form NewJFrame
     */
    public Janela() {
        /*Inicializa os componentes da janela.*/
        initComponents();
        /*Inicializa a janela no meio da tela.*/
        this.setLocationRelativeTo(null);
        /*Quebra a linha do texto quando excede a largura da area_texto.*/
        area_texto.setLineWrap(true);

        busca_a_estrela = new BuscaAEstrela();
        lista_caminho = new ArrayList();
        
        /* Alguns estados inicias que não existe solução */
        //tabuleiro = new int[][]{{8, 7, 6}, {5, 4, 3}, {2, 1, 0}};
        //tabuleiro = new int[][]{{8, 2, 5}, {4, 3, 6}, {7, 0, 1}};
        //tabuleiro = new int[][]{{8, 3, 1}, {5, 4, 2}, {0, 7, 6}};
        
        /* Possíveis estados iniciais */
        tabuleiro = new int[][]{{1, 2, 3}, {4, 5, 6}, {7, 8, 0}};
        //tabuleiro = new int[][]{{1, 2, 3}, {8, 0, 4}, {7, 6, 5}};
        
        lista_imagem = new String[][]{{"/Imagens/logo_ufu_peca_01.png", "/Imagens/logo_ufu_peca_02.png", "/Imagens/logo_ufu_peca_03.png"}, {"/Imagens/logo_ufu_peca_04.png", "/Imagens/logo_ufu_peca_05.png", "/Imagens/logo_ufu_peca_06.png"}, {"/Imagens/logo_ufu_peca_07.png", "/Imagens/logo_ufu_peca_08.png", "/Imagens/logo_ufu_peca_09.png"}};
        lista_imagem_padrao = new String[][]{{"/Imagens/logo_ufu_peca_01.png", "/Imagens/logo_ufu_peca_02.png", "/Imagens/logo_ufu_peca_03.png"}, {"/Imagens/logo_ufu_peca_04.png", "/Imagens/logo_ufu_peca_05.png", "/Imagens/logo_ufu_peca_06.png"}, {"/Imagens/logo_ufu_peca_07.png", "/Imagens/logo_ufu_peca_08.png", "/Imagens/logo_ufu_peca_09.png"}};
        botao = new javax.swing.JLabel[][]{{btn1, btn2, btn3}, {btn4, btn5, btn6}, {btn7, btn8, btn9}};

        iniciaTabuleiro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        btn1 = new javax.swing.JLabel();
        btn4 = new javax.swing.JLabel();
        btn7 = new javax.swing.JLabel();
        btn2 = new javax.swing.JLabel();
        btn5 = new javax.swing.JLabel();
        btn8 = new javax.swing.JLabel();
        btn3 = new javax.swing.JLabel();
        btn6 = new javax.swing.JLabel();
        btn9 = new javax.swing.JLabel();
        btnH2 = new javax.swing.JButton();
        btnH1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_texto = new javax.swing.JTextArea();
        texto_1 = new javax.swing.JLabel();
        texto_2 = new javax.swing.JLabel();
        texto_3 = new javax.swing.JLabel();
        btnH1e2 = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));

        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_01.png"))); // NOI18N
        btn1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn1MouseClicked(evt);
            }
        });

        btn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_04.png"))); // NOI18N
        btn4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn4MouseClicked(evt);
            }
        });

        btn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_07.png"))); // NOI18N
        btn7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn7MouseClicked(evt);
            }
        });

        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_02.png"))); // NOI18N
        btn2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn2MouseClicked(evt);
            }
        });

        btn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_05.png"))); // NOI18N
        btn5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn5MouseClicked(evt);
            }
        });

        btn8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_08.png"))); // NOI18N
        btn8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn8MouseClicked(evt);
            }
        });

        btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_03.png"))); // NOI18N
        btn3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn3MouseClicked(evt);
            }
        });

        btn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logo_ufu_peca_06.png"))); // NOI18N
        btn6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn6MouseClicked(evt);
            }
        });

        btn9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        btn9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        btnH2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnH2.setText("H2 Manhattan Distance");
        btnH2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnH2MouseClicked(evt);
            }
        });

        btnH1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnH1.setText("H1 Peças fora do Lugar");
        btnH1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnH1MouseClicked(evt);
            }
        });

        area_texto.setEditable(false);
        area_texto.setColumns(20);
        area_texto.setRows(5);
        jScrollPane1.setViewportView(area_texto);

        texto_1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        texto_1.setText("Puzzle dos 8 numeros ");

        texto_2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        texto_2.setText("Mova as peças para embaralhar a imagem, em seguida");

        texto_3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        texto_3.setText(" clique em uma das opções de busca.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(texto_1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(texto_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(texto_3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(texto_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(texto_2)
                .addGap(2, 2, 2)
                .addComponent(texto_3)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnH1e2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnH1e2.setText("H1 & H2 + comparação");
        btnH1e2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnH1e2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnH1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnH2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnH1e2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnH1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnH2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnH1e2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn1MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(0, 0);
    }//GEN-LAST:event_btn1MouseClicked

    private void btn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(0, 1);
    }//GEN-LAST:event_btn2MouseClicked

    private void btn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn3MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(0, 2);
    }//GEN-LAST:event_btn3MouseClicked

    private void btn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn4MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(1, 0);
    }//GEN-LAST:event_btn4MouseClicked

    private void btn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn5MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(1, 1);
    }//GEN-LAST:event_btn5MouseClicked

    private void btn6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn6MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(1, 2);
    }//GEN-LAST:event_btn6MouseClicked

    private void btn7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn7MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(2, 0);
    }//GEN-LAST:event_btn7MouseClicked

    private void btn8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn8MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(2, 1);
    }//GEN-LAST:event_btn8MouseClicked

    private void btn9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn9MouseClicked
        /*Atualiza a posição da peça.*/
        realizarMovimentoUsuario(2, 2);
    }//GEN-LAST:event_btn9MouseClicked

    private void btnH2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnH2MouseClicked
        texto_solucao = ".....:::  Busca A* - H2 Manhattan Distance  :::.....";
        texto = "Procurando solução...\n";
        
        /*Atualiza o texto na janela.*/
        area_texto.setText(texto);

        /*Desabilita botões de busca.*/
        btnH1.setEnabled(false);
        btnH2.setEnabled(false);
        btnH1e2.setEnabled(false);

        /*Exibe mensagem para o usuário.*/
        JOptionPane.showMessageDialog(rootPane, "Procurando solução!");
        /*Procura a solução e inicia a movimentação das peças.*/
        aplicarSolucao(busca_a_estrela.iniciarBusca(tabuleiro, 2), false);
    }//GEN-LAST:event_btnH2MouseClicked

    private void btnH1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnH1MouseClicked
        texto_solucao = ".....:::  Busca A* - H1 Peças fora do Lugar  :::.....";
        texto = "Procurando solução...\n";
        
        /*Atualiza o texto na janela.*/
        area_texto.setText(texto);

        /*Desabilita botões de busca.*/
        btnH1.setEnabled(false);
        btnH2.setEnabled(false);
        btnH1e2.setEnabled(false);

        /*Exibe mensagem para o usuário.*/
        JOptionPane.showMessageDialog(rootPane, "Procurando solução!");
        /*Procura a solução e inicia a movimentação das peças.*/
        aplicarSolucao(busca_a_estrela.iniciarBusca(tabuleiro, 1), false);
    }//GEN-LAST:event_btnH1MouseClicked

    private void btnH1e2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnH1e2MouseClicked
        id_heuristica = 2;
        texto = "Procurando solução...\n";
        
        /*Atualiza o texto na janela.*/
        area_texto.setText(texto);

        /*Desabilita botões de busca.*/
        btnH1.setEnabled(false);
        btnH2.setEnabled(false);
        btnH1e2.setEnabled(false);

        /*Exibe mensagem para o usuário.*/
        JOptionPane.showMessageDialog(rootPane, "Procurando solução!");
        /*Procura a solução e inicia a movimentação das peças.*/
        aplicarSolucao(busca_a_estrela.iniciarBusca(tabuleiro, 2), true);
    }//GEN-LAST:event_btnH1e2MouseClicked

    /*Atualiza as posições das peças ao clicar em alguma delas.*/
    public void realizarMovimentoUsuario(int i, int j) {

        /*Se existir uma posição acima e ela for igual a 0 faça.*/
        if ((i - 1) >= 0 && tabuleiro[i - 1][j] == 0) {

            /*Link para a imagem na posição 0 recebe o link da imagem na posição acima.*/
            lista_imagem[i - 1][j] = lista_imagem[i][j];
            /*Atualiza a imagem da posição 0 com a imagem da posição acima.*/
            botao[i - 1][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem[i - 1][j])));
            /*Oculta o botão na posição com valor 0.*/
            botao[i][j].setIcon(null);
            /*A posição com o valor 0 do tabuleiro da Janela recebe o valor da posição acima.*/
            tabuleiro[i - 1][j] = tabuleiro[i][j];
            /*A posição acima recebe o valor 0.*/
            tabuleiro[i][j] = 0;
        } else 
            
            /*Se existir uma posição a direita e ela for igual a 0 faça.*/ 
            if ((j + 1) <= 2 && tabuleiro[i][j + 1] == 0) {

            /*Link para a imagem na posição 0 recebe o link da imagem na posição a direita.*/
            lista_imagem[i][j + 1] = lista_imagem[i][j];
            /*Atualiza a imagem da posição 0 com a imagem da posição a direita.*/
            botao[i][j + 1].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem[i][j + 1])));;
            /*Oculta o botão na posição com valor 0.*/
            botao[i][j].setIcon(null);
            /*A posição com o valor 0 do tabuleiro da Janela recebe o valor da posição a direita.*/
            tabuleiro[i][j + 1] = tabuleiro[i][j];
            /*A posição a direita recebe o valor 0.*/
            tabuleiro[i][j] = 0;
        } else 
            
            /*Se existir uma posição abaixo e ela for igual a 0 faça.*/ 
            if ((i + 1) <= 2 && tabuleiro[i + 1][j] == 0) {

            /*Link para a imagem na posição 0 recebe o link da imagem na posição abaixo.*/
            lista_imagem[i + 1][j] = lista_imagem[i][j];
            /*Atualiza a imagem da posição 0 com a imagem da posição abaixo.*/
            botao[i + 1][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem[i + 1][j])));
            /*Oculta o botão na posição com valor 0.*/
            botao[i][j].setIcon(null);
            /*A posição com o valor 0 do tabuleiro da Janela recebe o valor da posição abaixo.*/
            tabuleiro[i + 1][j] = tabuleiro[i][j];
            /*A posição abaixo recebe o valor 0.*/
            tabuleiro[i][j] = 0;
        } else 
            
            /*Se existir uma posição a esquerda e ela for igual a 0 faça.*/ 
            if ((j - 1) >= 0 && tabuleiro[i][j - 1] == 0) {

            /*Link para a imagem na posição 0 recebe o link da imagem na posição a esquerda.*/
            lista_imagem[i][j - 1] = lista_imagem[i][j];
            /*Atualiza a imagem da posição 0 com a imagem da posição a esquerda.*/
            botao[i][j - 1].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem[i][j - 1])));
            /*Oculta o botão na posição com valor 0.*/
            botao[i][j].setIcon(null);
            /*A posição com o valor 0 do tabuleiro da Janela recebe o valor da posição a esquerda.*/
            tabuleiro[i][j - 1] = tabuleiro[i][j];
            /*A posição a esquerda recebe o valor 0.*/
            tabuleiro[i][j] = 0;
        }
    }

    /*Atualiza as posições das peças a cada movimento do computador.*/
    public void realizarMovimentoComputador() {

        /*Explora cada posição do tabuleiro.*/
        for (int i = 0; i <= 2; i++) {
            for (int j = 0; j <= 2; j++) {

                /*Para cada posição atualiza com o mesmo valor da posição do tabuleiro do no neste momento*/
                switch (busca_a_estrela.lista_nos.get(lista_caminho.get(movimentar_no).id_no).tabuleiro[i][j]) {

                    case 0:
                        
                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(null);
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 0;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[2][2];
                        break;
                    case 1:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[0][0])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 1;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[0][0];
                        break;
                    case 2:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[0][1])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 2;
                        lista_imagem[i][j] = lista_imagem_padrao[0][1];
                        break;
                    case 3:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[0][2])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 3;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[0][2];
                        break;
                    case 4:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[1][0])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 4;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[1][0];
                        break;
                    case 5:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[1][1])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 5;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[1][1];
                        break;
                    case 6:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[1][2])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 6;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[1][2];
                        break;
                    case 7:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[2][0])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 7;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[2][0];
                        break;
                    case 8:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[2][1])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        tabuleiro[i][j] = 8;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[2][1];
                        break;
                }
            }
        }
    }

    /*Inicia o processo para movimentação das peças realizados pelo computador.*/
    public void aplicarSolucao(No no_objetivo, boolean realizar_comparacao) {

        /*Se foi encontrado um nó objetivo faça.*/
        if (no_objetivo != null) {
            /*Adiciona o nó objetivo na lista caminho.*/
            lista_caminho.add(no_objetivo);

            /*Cria caminho do nó raiz até o no objetivo.*/
            buscaNoPai(no_objetivo);

            /*Se não é para realizar comparação faça.*/
            if (!realizar_comparacao) {
                /*Exibe mensagem para o usuário.*/
                JOptionPane.showMessageDialog(rootPane, "Solução Encontrada!!!");
                texto = texto + "Aplicando solução...\n";
                area_texto.setText(texto);
            }

            atualizarJanela(realizar_comparacao);
        } else {
            /*Exibe mensagem para o usuário.*/
            JOptionPane.showMessageDialog(rootPane, "Não foi encontrada uma solução");
            /*Habilita botões de busca.*/
            btnH1.setEnabled(true);
            btnH2.setEnabled(true);
            btnH1e2.setEnabled(true);
        }
    }

    /*Adiciona o no pai do no na lista caminho criando assim o caminho do no raiz até o no objetivo.*/
    public void buscaNoPai(No no_filho) {

        /*Se o nó pai deste nó não for o no raiz faça.*/
        if (no_filho.id_no_pai != 0) {

            /*Adiciona o no pai deste no na lista_caminho.*/
            lista_caminho.add(busca_a_estrela.lista_nos.get(no_filho.id_no_pai));
            /*Chama a função novamente para buscar o nó pai do nó pai deste nó.*/
            buscaNoPai(busca_a_estrela.lista_nos.get(no_filho.id_no_pai));
        } else /*Se a lista_caminho possuir mais de um nó faça.*/ if (lista_caminho.size() > 1) {

            /*Adiciona o no raiz na_fila_caminho.*/
            lista_caminho.add(busca_a_estrela.lista_nos.get(no_filho.id_no_pai));
        }/*Obs.: Se lista_caminho possuir apenas um nó, quer dizer que o nó objetivo é o nó raiz então 
        não é necessário adiciona-lo na lista_caminho novamente.*/
    }

    /*Cria uma sub execução deste sistema para movimentar as peças a cada intervalo de tempo.*/
    private void atualizarJanela(boolean realizar_comparacao) {

        movimentar_no = lista_caminho.size() - 1;

        /*Constrói a sub execução deste sistema.*/
        Timer temporizador = new Timer();
        TimerTask tarefa = new TimerTask() {

            /*Método que será executado a cada intervalo de tempo. Ele contem as informações que serão exibidas na janela*/
            @Override
            public void run() {

                /*Se não é para realizar comparação faça.*/
                if (!realizar_comparacao) {
                    if (movimentar_no >= 0) {

                        /*Atualiza as posições das peças.*/
                        realizarMovimentoComputador();

                        /*Atualiza as informações que serão exibidas na janela.*/
                        texto = texto + "F( de nó " + lista_caminho.get(movimentar_no).id_no + " ) = " + lista_caminho.get(movimentar_no).custo_total + "\n";
                        area_texto.setText(texto);

                        movimentar_no--;
                    } else {

                        /*Atualiza as informações que serão exibidas na janela.*/
                        texto = texto + "Solução concluida...\n";
                        texto = texto + "\n" + texto_solucao + "\n\n";
                        texto = texto + "Movimentos realizados: " + lista_caminho.get(0).profundiade + "\n\n";
                        texto = texto + "ID do nó objetivo: " + lista_caminho.get(0).id_no + "\n\n";
                        texto = texto + "Profundiade do nó objetivo: " + lista_caminho.get(0).profundiade + "\n\n";
                        texto = texto + "Nós gerados: " + busca_a_estrela.lista_nos.size() + "\n\n";
                        texto = texto + "Nós explorados: " + busca_a_estrela.nos_explorados + "\n\n";
                        texto = texto + "ID dos nós até o nó objetivo: ";
                        for (int i = lista_caminho.size() - 1; i >= 0; i--) {
                            texto = texto + lista_caminho.get(i).id_no + "; ";
                        }
                        texto = texto + "\n";

                        /*Atualiza o texto na janela.*/
                        area_texto.setText(texto);
                        
                        
                        /*Cancela a sub execução.*/
                        temporizador.cancel();
                        
                        busca_a_estrela.lista_nos.clear();
                        busca_a_estrela.lista_nos_borda.clear();
                        lista_caminho.clear();

                        /*Habilita botões de busca.*/
                        btnH1.setEnabled(true);
                        btnH2.setEnabled(true);
                        btnH1e2.setEnabled(true);
                    }
                } else {
                    switch (id_heuristica) {
                        case 0:

                            if (movimentar_no >= 0) {

                                /*Atualiza as posições das peças.*/
                                realizarMovimentoComputador();
                                movimentar_no--;
                            } else {
                                
                                /*Atualiza as informações que serão exibidas na janela.*/
                                texto = texto + "Solução concluida...\n";
                                texto = texto + "\n.....:::  Comparação entre H1 e H2  :::.....\n\n";
                                texto = texto + "Movimentos realizados:\n";
                                texto = texto + " >  H1:  " + quantidade_movimentos_H1 + "\n >  H2:  " + quantidade_movimentos_H2 + "\n\n";
                                texto = texto + "ID do nó objetivo:\n";
                                texto = texto + " >  H1:  " + id_no_objetivo_H1 + "\n >  H2:  " + id_no_objetivo_H2 + "\n\n";
                                texto = texto + "Profundiade do nó objetivo:\n";
                                texto = texto + " >  H1:  " + profundidade_H1 + "\n >  H2:  " + profundidade_H2 + "\n\n";
                                texto = texto + "Nós gerados:\n";
                                texto = texto + " >  H1:  " + nos_gerados_H1 + "\n >  H2:  " + nos_gerados_H2 + "\n\n";
                                texto = texto + "Nós explorados:\n";
                                texto = texto + " >  H1:  " + nos_explorados_H1 + "\n >  H2:  " + nos_explorados_H2 + "\n\n";
                                texto = texto + "ID dos nós até o nó objetivo:\n";
                                texto = texto + " >  H1:  " + caminho_H1 + "\n >  H2:  " + caminho_H2+"\n";

                                /*Atualiza o texto na janela.*/
                                area_texto.setText(texto);

                                /*Cancela a sub execução.*/
                                temporizador.cancel();
                                
                                busca_a_estrela.lista_nos.clear();
                                busca_a_estrela.lista_nos_borda.clear();
                                lista_caminho.clear();

                                /*Habilita botões de busca.*/
                                btnH1.setEnabled(true);
                                btnH2.setEnabled(true);
                                btnH1e2.setEnabled(true);
                            }

                            break;

                        case 1:

                            id_heuristica--;

                            /*Atualiza as informações que serão exibidas na janela.*/
                            quantidade_movimentos_H1 = "" + lista_caminho.get(0).profundiade;
                            id_no_objetivo_H1 = "" + lista_caminho.get(0).id_no;
                            profundidade_H1 = "" + lista_caminho.get(0).profundiade;
                            nos_gerados_H1 = "" + busca_a_estrela.lista_nos.size();
                            nos_explorados_H1 = "" +  busca_a_estrela.nos_explorados;
                            caminho_H1 = "";
                            for (int i = lista_caminho.size() - 1; i >= 0; i--) {
                                caminho_H1 = caminho_H1 + lista_caminho.get(i).id_no + "; ";
                            }
                            texto = texto + "Aplicando solução...\n";
                            
                            
                            /*Cancela a sub execução.*/
                            temporizador.cancel();
                            
                            /*Exibe mensagem para o usuário.*/
                            JOptionPane.showMessageDialog(rootPane, "Solução Encontrada!!!\nOs movimentos serão realizados com base na H1.");
                            
                            /*Atualiza o texto na janela.*/
                            area_texto.setText(texto);

                            atualizarJanela(realizar_comparacao);
                            break;
                        case 2:

                            id_heuristica--;

                            /*Atualiza as informações que serão exibidas na janela.*/
                            quantidade_movimentos_H2 = "" + lista_caminho.get(0).profundiade;
                            id_no_objetivo_H2 = "" + lista_caminho.get(0).id_no;
                            profundidade_H2 = "" + lista_caminho.get(0).profundiade;
                            nos_gerados_H2 = "" + busca_a_estrela.lista_nos.size();
                            nos_explorados_H2 = "" +  busca_a_estrela.nos_explorados;
                            caminho_H2 = "";
                            for (int i = lista_caminho.size() - 1; i >= 0; i--) {
                                caminho_H2 = caminho_H2 + lista_caminho.get(i).id_no + "; ";
                            }

                            /*Cancela a sub execução.*/
                            temporizador.cancel();
                            
                            busca_a_estrela.lista_nos.clear();
                            busca_a_estrela.lista_nos_borda.clear();
                            lista_caminho.clear();

                            aplicarSolucao(busca_a_estrela.iniciarBusca(tabuleiro, 1), realizar_comparacao);
                            break;
                    }
                }
            }
        };

        /*Executa o método run a cada 800 milissegundos.*/
        temporizador.scheduleAtFixedRate(tarefa, 0, 1000);
    }
    
    /*Atualiza as posições das peças a cada movimento do computador.*/
    public void iniciaTabuleiro() {

        /*Explora cada posição do tabuleiro.*/
        for (int i = 0; i <= 2; i++) {
            for (int j = 0; j <= 2; j++) {

                /*Para cada posição atualiza com o mesmo valor da posição do tabuleiro do no neste momento*/
                switch (tabuleiro[i][j]) {

                    case 0:
                        
                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(null);
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 0;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[2][2];
                        break;
                    case 1:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[0][0])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 1;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[0][0];
                        break;
                    case 2:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[0][1])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 2;
                        lista_imagem[i][j] = lista_imagem_padrao[0][1];
                        break;
                    case 3:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[0][2])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 3;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[0][2];
                        break;
                    case 4:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[1][0])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 4;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[1][0];
                        break;
                    case 5:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[1][1])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 5;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[1][1];
                        break;
                    case 6:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[1][2])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 6;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[1][2];
                        break;
                    case 7:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[2][0])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 7;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[2][0];
                        break;
                    case 8:

                        /*Atualiza a imagem da posição atual.*/
                        botao[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource(lista_imagem_padrao[2][1])));
                        /*Atualiza o valor da posição atual no tabuleiro.*/
                        //tabuleiro[i][j] = 8;
                        /*Atualiza o link da imagem na posição atual.*/
                        lista_imagem[i][j] = lista_imagem_padrao[2][1];
                        break;
                }
            }
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area_texto;
    private javax.swing.JLabel btn1;
    private javax.swing.JLabel btn2;
    private javax.swing.JLabel btn3;
    private javax.swing.JLabel btn4;
    private javax.swing.JLabel btn5;
    private javax.swing.JLabel btn6;
    private javax.swing.JLabel btn7;
    private javax.swing.JLabel btn8;
    private javax.swing.JLabel btn9;
    private javax.swing.JButton btnH1;
    private javax.swing.JButton btnH1e2;
    private javax.swing.JButton btnH2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel texto_1;
    private javax.swing.JLabel texto_2;
    private javax.swing.JLabel texto_3;
    // End of variables declaration//GEN-END:variables
}
